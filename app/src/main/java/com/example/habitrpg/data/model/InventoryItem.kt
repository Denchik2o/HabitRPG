package com.example.habitrpg.data.model

import androidx.room.Entity
import androidx.room.PrimaryKey

// –¢–∏–ø—ã –ø—Ä–µ–¥–º–µ—Ç–æ–≤
enum class ItemType(val displayName: String) {
    WEAPON("–û—Ä—É–∂–∏–µ"),
    HELMET("–®–ª–µ–º"),
    BREASTPLATE("–ù–∞–≥—Ä—É–¥–Ω–∏–∫"),
    GREAVES("–ü–æ–Ω–æ–∂–∏"),
    ACCESSORY("–ê–∫—Å–µ—Å—Å—É–∞—Ä"),
    CONSUMABLE("–†–∞—Å—Ö–æ–¥–Ω–∏–∫")
}

// –†–µ–¥–∫–æ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç–æ–≤
enum class ItemRarity(
    val displayName: String,
    val color: String
) {
    COMMON("–û–±—ã—á–Ω—ã–π", "#A0A0A0"),
    UNCOMMON("–ù–µ–æ–±—ã—á–Ω—ã–π", "#00FF00"),
    RARE("–†–µ–¥–∫–∏–π", "#0070DD"),
    EPIC("–≠–ø–∏—á–µ—Å–∫–∏–π", "#A335EE"),
    LEGENDARY("–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π", "#FF8000")
}

// –ö–ª–∞—Å—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç
enum class ItemClass(val displayName: String) {
    WARRIOR("–í–æ–∏–Ω"),
    ARCHER("–õ—É—á–Ω–∏–∫"),
    MAGE("–ú–∞–≥"),
    ALL("–í—Å–µ")
}

@Entity
data class InventoryItem(
    @PrimaryKey(autoGenerate = true) val id: Long = 0,
    val name: String,
    val description: String,
    val itemType: ItemType,
    val rarity: ItemRarity,
    val requiredLevel: Int = 1,
    val allowedClass: ItemClass = ItemClass.ALL,

    // –ë–æ–Ω—É—Å—ã –∫ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º
    val hpBonus: Int = 0,
    val mpBonus: Int = 0,
    val attackBonus: Int = 0,
    val defenseBonus: Int = 0,

    // –¶–µ–Ω–∞ –∏ —Å–≤–æ–π—Å—Ç–≤–∞
    val goldValue: Int = 0,
    val isEquipped: Boolean = false,
    val isConsumable: Boolean = false,
    val stackSize: Int = 1,

    // sprite
    val spriteResId: String = "",
) {
    fun getDisplayName(): String {
        return when (rarity) {
            ItemRarity.COMMON -> name
            ItemRarity.UNCOMMON -> "$name ‚ú®"
            ItemRarity.RARE -> "$name üî∑"
            ItemRarity.EPIC -> "$name üíú"
            ItemRarity.LEGENDARY -> "$name üß°"
        }
    }

    fun canUse(character: Character): Boolean {
        return character.level >= requiredLevel &&
                (allowedClass == ItemClass.ALL ||
                        character.characterClass == allowedClass.name)
    }
}

// –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–∞–≥–∞–∑–∏–Ω–∞
enum class ShopCategory(val displayName: String) {
    WEAPONS("–û—Ä—É–∂–∏–µ"),
    ARMOR("–ë—Ä–æ–Ω—è"),
    ACCESSORIES("–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã"),
    CONSUMABLES("–ó–µ–ª—å—è"),
    ALL("–í—Å–µ —Ç–æ–≤–∞—Ä—ã")
}

// –°—Ç–∞—Ä—Ç–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞
fun getShopItems(): List<InventoryItem> {
    return listOf(
        // –û—Ä—É–∂–∏–µ
        InventoryItem(
            name = "–î–µ—Ä–µ–≤—è–Ω–Ω—ã–π –º–µ—á",
            description = "–ü—Ä–æ—Å—Ç–æ–π –º–µ—á –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –≤–æ–∏–Ω–æ–≤",
            itemType = ItemType.WEAPON,
            rarity = ItemRarity.COMMON,
            requiredLevel = 1,
            allowedClass = ItemClass.WARRIOR,
            attackBonus = 2,
            goldValue = 50,
            spriteResId = "item_sword_wooden"
        ),
        InventoryItem(
            name = "–°—Ç–∞–ª—å–Ω–æ–π –º–µ—á",
            description = "–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ—Ä—É–∂–∏–µ –≤–æ–∏–Ω–∞",
            itemType = ItemType.WEAPON,
            rarity = ItemRarity.UNCOMMON,
            requiredLevel = 3,
            allowedClass = ItemClass.WARRIOR,
            attackBonus = 5,
            goldValue = 120,
        ),
        InventoryItem(
            name = "–î—É–±–æ–≤—ã–π –ª—É–∫",
            description = "–ù–∞–¥–µ–∂–Ω—ã–π –ª—É–∫ –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫",
            itemType = ItemType.WEAPON,
            rarity = ItemRarity.COMMON,
            requiredLevel = 1,
            allowedClass = ItemClass.ARCHER,
            attackBonus = 2,
            goldValue = 50,
            spriteResId = "item_bow_oak"
        ),
        InventoryItem(
            name = "–ü–æ—Å–æ—Ö —É—á–µ–Ω–∏–∫–∞",
            description = "–ü—Ä–æ—Å—Ç–µ–π—à–∏–π –º–∞–≥–∏—á–µ—Å–∫–∏–π –ø–æ—Å–æ—Ö",
            itemType = ItemType.WEAPON,
            rarity = ItemRarity.COMMON,
            requiredLevel = 1,
            allowedClass = ItemClass.MAGE,
            mpBonus = 5,
            goldValue = 50,
            spriteResId = "item_staff_apprentice"
        ),

        // –ë—Ä–æ–Ω—è
        InventoryItem(
            name = "–ö–æ–∂–∞–Ω—ã–π —à–ª–µ–º",
            description = "–ë–∞–∑–æ–≤–∞—è –∑–∞—â–∏—Ç–∞ –¥–ª—è –≥–æ–ª–æ–≤—ã",
            itemType = ItemType.HELMET,
            rarity = ItemRarity.COMMON,
            requiredLevel = 1,
            defenseBonus = 1,
            goldValue = 30,
            spriteResId = "item_helmet_leather"
        ),
        InventoryItem(
            name = "–ö–æ–∂–∞–Ω—ã–π –Ω–∞–≥—Ä—É–¥–Ω–∏–∫",
            description = "–ö–æ–∂–∞–Ω–∞—è –±—Ä–æ–Ω—è –¥–ª—è —Ç–æ—Ä—Å–∞",
            itemType = ItemType.BREASTPLATE,
            rarity = ItemRarity.COMMON,
            requiredLevel = 1,
            defenseBonus = 2,
            goldValue = 40,
            spriteResId = "item_breastplate_leather"
        ),
        InventoryItem(
            name = "–ö–æ–∂–∞–Ω—ã–µ –ø–æ–Ω–æ–∂–∏",
            description = "–ó–∞—â–∏—Ç–∞ –¥–ª—è –Ω–æ–≥",
            itemType = ItemType.GREAVES,
            rarity = ItemRarity.COMMON,
            requiredLevel = 1,
            defenseBonus = 1,
            goldValue = 30,
            spriteResId = "item_greaves_leather"
        ),

        // –ê–∫—Å–µ—Å—Å—É–∞—Ä—ã
        InventoryItem(
            name = "–ú–µ–¥–Ω–æ–µ –∫–æ–ª—å—Ü–æ",
            description = "–ü—Ä–æ—Å—Ç–æ–µ –∫–æ–ª—å—Ü–æ —Å –º–∞–ª–æ–π –º–∞–≥–∏–µ–π",
            itemType = ItemType.ACCESSORY,
            rarity = ItemRarity.COMMON,
            requiredLevel = 1,
            hpBonus = 5,
            goldValue = 25,
            spriteResId = "item_ring_copper"
        ),
        InventoryItem(
            name = "–°–µ—Ä–µ–±—Ä—è–Ω—ã–π –∞–º—É–ª–µ—Ç",
            description = "–ê–º—É–ª–µ—Ç —Å –∑–∞—â–∏—Ç–Ω–æ–π –º–∞–≥–∏–µ–π",
            itemType = ItemType.ACCESSORY,
            rarity = ItemRarity.UNCOMMON,
            requiredLevel = 3,
            defenseBonus = 3,
            hpBonus = 10,
            goldValue = 80
        ),

        // –ó–µ–ª—å—è
        InventoryItem(
            name = "–ó–µ–ª—å–µ –∑–¥–æ—Ä–æ–≤—å—è",
            description = "–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 30 HP",
            itemType = ItemType.CONSUMABLE,
            rarity = ItemRarity.COMMON,
            isConsumable = true,
            hpBonus = 30,
            stackSize = 1,
            goldValue = 20
        ),
        InventoryItem(
            name = "–ó–µ–ª—å–µ –º–∞–Ω—ã",
            description = "–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 25 MP",
            itemType = ItemType.CONSUMABLE,
            rarity = ItemRarity.COMMON,
            isConsumable = true,
            mpBonus = 25,
            stackSize = 1,
            goldValue = 18
        ),
        InventoryItem(
            name = "–ë–æ–ª—å—à–æ–µ –∑–µ–ª—å–µ –∑–¥–æ—Ä–æ–≤—å—è",
            description = "–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 60 HP",
            itemType = ItemType.CONSUMABLE,
            rarity = ItemRarity.UNCOMMON,
            isConsumable = true,
            hpBonus = 60,
            stackSize = 1,
            goldValue = 35,
            requiredLevel = 3
        ),
        InventoryItem(
            name = "–ë–æ–ª—å—à–æ–µ –∑–µ–ª—å–µ –º–∞–Ω—ã",
            description = "–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 50 MP",
            itemType = ItemType.CONSUMABLE,
            rarity = ItemRarity.UNCOMMON,
            isConsumable = true,
            mpBonus = 50,
            stackSize = 1,
            goldValue = 32,
            requiredLevel = 3
        )
    )
}